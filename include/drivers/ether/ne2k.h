#pragma once

#include <stdint.h>

typedef struct {
	uint8_t status;
	uint8_t next;
	uint16_t size;
} __attribute__((packed)) ne2k_packet_header_t;

enum {
	NE2K_P0R_CMD = 0,
	NE2K_P0R_LOCAL_DMA_LOW,
	NE2K_P0R_LOCAL_DMA_HIGH,
	NE2K_P0R_BOUNDRY_POINTER,
	NE2K_P0R_TRANSMIT_STATUS,
	NE2K_P0R_COLLISION_COUNTER,
	NE2K_P0R_FIFO,
	NE2K_P0R_IRQ_STAT,
	NE2K_P0R_REMOTE_DMA_LOW,
	NE2K_P0R_REMOTE_DMA_HIGH,
	NE2K_P0R_RECEIVE_STATUS = 0x0c,
	NE2K_P0R_ALIGNMENT_ERR_COUNTER,
	NE2K_P0R_CRC_ERR_COUNTER,
	NE2K_P0R_DROPPED_COUNTER,
	NE2K_P1R_CMD = 0,
	NE2K_P1R_PHYS0,
	NE2K_P1R_PHYS1,
	NE2K_P1R_PHYS2,
	NE2K_P1R_PHYS3,
	NE2K_P1R_PHYS4,
	NE2K_P1R_PHYS5,
	NE2K_P1R_CURRENT_PAGE,
	NE2K_P1R_MAR0,
	NE2K_P1R_MAR1,
	NE2K_P1R_MAR2,
	NE2K_P1R_MAR3,
	NE2K_P1R_MAR4,
	NE2K_P1R_MAR5,
	NE2K_P1R_MAR6,
	NE2K_P1R_MAR7,
	NE2K_P2R_CMD = 0,
	NE2K_P2R_PAGE_START,
	NE2K_P2R_PAGE_STOP,
	NE2K_P2R_REMOTE_NEXT,
	NE2K_P2R_TRANSMIT_ADDRESS,
	NE2K_P2R_LOCAL_NEXT,
	NE2K_P2R_ADDRESS_COUNTER_HIGH,
	NE2K_P2R_ADDRESS_COUNTER_LOW,
	NE2K_P2R_RECEIVE_CONFIG = 0x0c,
	NE2K_P2R_TRANSMIT_CONFIG,
	NE2K_P2R_DATA_CONFIG,
	NE2K_P2R_IRQ_MASK,

	NE2K_P0W_CMD = 0,
	NE2K_P0W_PAGE_START,
	NE2K_P0W_PAGE_STOP,
	NE2K_P0W_BOUNDRY_POINTER,
	NE2K_P0W_TRANSMIT_PAGE_START,
	NE2K_P0W_TRANSMIT_COUNT0,
	NE2K_P0W_TRANSMIT_COUNT1,
	NE2K_P0W_IRQ_STAT,
	NE2K_P0W_REMOTE_DMA_LOW,
	NE2K_P0W_REMOTE_DMA_HIGH,
	NE2K_P0W_REMOTE_COUNT_LOW,
	NE2K_P0W_REMOTE_COUNT_HIGH,
	NE2K_P0W_RECEIVE_CONFIG,
	NE2K_P0W_TRANSMIT_CONFIG,
	NE2K_P0W_DATA_CONFIG,
	NE2K_P0W_IRQ_MASK,
	NE2K_P1W_CMD = 0,
	NE2K_P1W_PHYS0,
	NE2K_P1W_PHYS1,
	NE2K_P1W_PHYS2,
	NE2K_P1W_PHYS3,
	NE2K_P1W_PHYS4,
	NE2K_P1W_PHYS5,
	NE2K_P1W_CURRENT_PAGE,
	NE2K_P1W_MAR0,
	NE2K_P1W_MAR1,
	NE2K_P1W_MAR2,
	NE2K_P1W_MAR3,
	NE2K_P1W_MAR4,
	NE2K_P1W_MAR5,
	NE2K_P1W_MAR6,
	NE2K_P1W_MAR7,
	NE2K_P2W_CMD = 0,
	NE2K_P2W_PAGE_START,
	NE2K_P2W_PAGE_STOP,
	NE2K_P2W_REMOTE_NEXT,
	NE2K_P2W_TRANSMIT_ADDRESS,
	NE2K_P2W_LOCAL_NEXT,
	NE2K_P2W_ADDRESS_COUNTER_HIGH,
	NE2K_P2W_ADDRESS_COUNTER_LOW,

	NE2K_DATA = 0x10,
	NE2K_RESET = 0x1f,

	NE2K_CMD_STOP        = 0b00000001,
	NE2K_CMD_START       = 0b00000010,
	NE2K_CMD_TRANSMIT    = 0b00000100,
	NE2K_CMD_RDMA_NO     = 0b00000000,
	NE2K_CMD_RDMA_READ   = 0b00001000,
	NE2K_CMD_RDMA_WRITE  = 0b00010000,
	NE2K_CMD_RDMA_SEND   = 0b00011000,
	NE2K_CMD_RDMA_ABORT  = 0b00100000,
	NE2K_CMD_PAGE0       = 0b00000000,
	NE2K_CMD_PAGE1       = 0b01000000,
	NE2K_CMD_PAGE2       = 0b10000000,

	NE2K_DATA_CONFIG_BYTE       = 0b00000000,
	NE2K_DATA_CONFIG_WORD       = 0b00000001,
	NE2K_DATA_CONFIG_LITTLE     = 0b00000000,
	NE2K_DATA_CONFIG_BIG        = 0b00000010,
	NE2K_DATA_CONFIG_DUAL16     = 0b00000000,
	NE2K_DATA_CONFIG_32BIT      = 0b00000100,
	NE2K_DATA_CONFIG_LOOPBACK   = 0b00000000,
	NE2K_DATA_CONFIG_NOLOOP     = 0b00001000,
	NE2K_DATA_CONFIG_NOSEND     = 0b00000000,
	NE2K_DATA_CONFIG_SEND       = 0b00010000,
	NE2K_DATA_CONFIG_FIFO_WORD  = 0b00000000,
	NE2K_DATA_CONFIG_FIFO_DWORD = 0b00100000,
	NE2K_DATA_CONFIG_FIFO_QWORD = 0b01000000,
	NE2K_DATA_CONFIG_FIFO_TWORD = 0b01100000,

	NE2K_RECEIVE_ACCEPT_CRC       = 0b00000001,
	NE2K_RECEIVE_ACCEPT_SMALL     = 0b00000010,
	NE2K_RECEIVE_ACCEPT_BROADCAST = 0b00000100,
	NE2K_RECEIVE_ACCEPT_MULTICAST = 0b00001000,
	NE2K_RECEIVE_ACCEPT_PHYSICALS = 0b00010000,
	NE2K_RECEIVE_DISABLE          = 0b00100000,

	NE2K_TRANSMIT_DISABLE_CRC      = 0b00000001,
	NE2K_TRANSMIT_NO_LOOPBACK      = 0b00000000,
	NE2K_TRANSMIT_LOOPBACK         = 0b00000010,
	NE2K_TRANSMIT_LOOPBACK1        = 0b00000100,
	NE2K_TRANSMIT_LOOPBACK2        = 0b00000110,
	NE2K_TRANSMIT_ALLOW_SQUELCH    = 0b00001000,
	NE2K_TRANSMIT_BACKOFF_PRIORITY = 0b00010000,

	NE2K_IRQ_STAT_RECEIVED        = 0b00000001,
	NE2K_IRQ_STAT_TRANSMITED      = 0b00000010,
	NE2K_IRQ_STAT_RECEIVE_ERROR   = 0b00000100,
	NE2K_IRQ_STAT_TRANSMIT_ERROR  = 0b00001000,
	NE2K_IRQ_STAT_BOUNDRY_REACHED = 0b00010000,
	NE2K_IRQ_STAT_OVERFLOW        = 0b00100000,
	NE2K_IRQ_STAT_DMA_COMPLETE    = 0b01000000,
	NE2K_IRQ_STAT_RESET_STATUS    = 0b10000000,
};

void ne2k_init();
void ne2k_dma_in(void * p, uint16_t frame, uint16_t size);
void ne2k_dma_out(void * p, uint16_t frame, uint16_t size);
