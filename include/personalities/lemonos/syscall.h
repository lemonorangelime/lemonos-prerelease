#pragma once

#include <graphics/graphics.h>

enum {
	SYSCALL_LEMONOSv1_SYSINFO = 0x00,
	SYSCALL_LEMONOSv1_PRINT = 0x01,
	SYSCALL_LEMONOSv1_SYSCONF = 0x02,
	SYSCALL_LEMONOSv1_RAND = 0x03,
	SYSCALL_LEMONOSv1_GETCH = 0x04,
	SYSCALL_LEMONOSv1_GETPID = 0x05,
	SYSCALL_LEMONOSv1_GETHOSTNAME = 0x06,
	SYSCALL_LEMONOSv1_GETUID = 0x07,
	SYSCALL_LEMONOSv1_MOVE_CURSOR = 0x08,
	SYSCALL_LEMONOSv1_FREE = 0x09,
	SYSCALL_LEMONOSv1_MALLOC = 0x0a,
	SYSCALL_LEMONOSv1_SRAND = 0x0b,
	SYSCALL_LEMONOSv1_SYSTEM = 0x0c,
	SYSCALL_LEMONOSv1_PUTC = 0x0d,
	SYSCALL_LEMONOSv1_OPEN = 0x0e,
	SYSCALL_LEMONOSv1_READ = 0x0f,
	SYSCALL_LEMONOSv1_SIZE = 0x10,
	SYSCALL_LEMONOSv1_WHEREX = 0x11,
	SYSCALL_LEMONOSv1_WHEREY = 0x12,
	SYSCALL_LEMONOSv1_CPRINTF = 0x13,
	SYSCALL_LEMONOSv1_CPUTC = 0x14,
	SYSCALL_LEMONOSv1_CREATE_WINDOW = 0x15, // retro-actively renamed
	SYSCALL_LEMONOSv1_DESTORY_WINDOW = 0x16, // retro-actively renamed
	SYSCALL_LEMONOSv1_CHAR_DRAW = 0x17,
	SYSCALL_LEMONOSv1_MOUSE_BUTTONS = 0x18,
	SYSCALL_LEMONOSv1_MOUSE_X = 0x19,
	SYSCALL_LEMONOSv1_MOUSE_Y = 0x1a,
	SYSCALL_LEMONOSv1_POWEROFF = 0x1b, // retro-actively renamed
	SYSCALL_LEMONOSv1_CLEAR_SCREEN = 0x1c,
	SYSCALL_LEMONOSv1_NAME = 0x1d,
	SYSCALL_LEMONOSv1_KTASK_ADDRESS = 255,
	SYSCALL_LEMONOSv1_KTASK_PANIC = 256,
};

enum {
	SYSCONF_LEMONOS_CMOSTIME,
	SYSCONF_LEMONOS_TICKS,
	SYSCONF_LEMONOS_FREQUENCY,
	SYSCONF_LEMONOS_MEMORY_SIZE,
	SYSCONF_LEMONOS_MEMORY_USED,
	SYSCONF_LEMONOS_MEMORY_ALLOC,
	SYSCONF_LEMONOS_MEMORY_FREE,
	SYSCONF_LEMONOS_MEMORY_START,
	SYSCONF_LEMONOS_MEMORY_END,
	SYSCONF_LEMONOS_GRAPHICS_MODE,
	SYSCONF_LEMONOS_PRIVILEGE,
	SYSCONF_LEMONOS_VERMIN,
	SYSCONF_LEMONOS_VERMAX,
	SYSCONF_LEMONOS_FPS,
	SYSCONF_LEMONOS_CLOCKHZ,
	SYSCONF_LEMONOS_SCREENSAVER,
	SYSCONF_LEMONOS_USERNAME,
	SYSCONF_LEMONOS_SCREEN_WIDTH,
	SYSCONF_LEMONOS_SCREEN_HEIGHT,
	SYSCONF_LEMONOS_GRAPHICS_BPP,
	SYSCONF_LEMONOS_GRAPHICS_FB,
	SYSCONF_LEMONOS_GRAPHICS_CURSOR,
	SYSCONF_LEMONOS_GRAPHICS_STREAKS,
	SYSCONF_LEMONOS_BROWSER,
};

typedef struct {
	int x;
	int y;
	window_t * window;
	int cursorx;
	int cursory;
	int updated;
	unsigned char * fb;
	int width;
	int height;
} lemonos_rect_2d_t;

typedef struct {
	uint32_t ds;
	uint32_t edi, esi, ebp, esp, ebx, edx, ecx, eax;
	uint32_t int_no, err_code;
	uint32_t eip, cs, eflags, useresp, ss;
} lemonos_registers_t;

void personality_lemonos_init();
